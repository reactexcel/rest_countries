{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/vridhi/Documents/rest-countries/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";var _marked=/*#__PURE__*/_regeneratorRuntime().mark(fetchCountrySaga),_marked2=/*#__PURE__*/_regeneratorRuntime().mark(countrySaga);import axios from\"axios\";import{all,call,put,takeLatest}from\"redux-saga/effects\";import{getAllCountryListSuccess,getAllCountryListError}from\"../actions/countryAction\";import*as actions from\"../constant\";var getCountry=function getCountry(){return axios.get(\"https://restcountries.com/v3.1/all\");};function fetchCountrySaga(){var response;return _regeneratorRuntime().wrap(function fetchCountrySaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(getCountry);case 3:response=_context.sent;_context.next=6;return put(getAllCountryListSuccess({country:response.data}));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put(getAllCountryListError({error:_context.t0.message}));case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}function countrySaga(){return _regeneratorRuntime().wrap(function countrySaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return all([takeLatest(actions.GET_ALL_COUNTRY_LIST_REQUEST,fetchCountrySaga)]);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default countrySaga;","map":{"version":3,"names":["fetchCountrySaga","countrySaga","axios","all","call","put","takeLatest","getAllCountryListSuccess","getAllCountryListError","actions","getCountry","get","response","country","data","error","message","GET_ALL_COUNTRY_LIST_REQUEST"],"sources":["C:/Users/vridhi/Documents/rest-countries/src/redux/saga/countrySaga.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  getAllCountryListSuccess,\r\n  getAllCountryListError,\r\n} from \"../actions/countryAction\";\r\nimport * as actions from \"../constant\";\r\nimport { CTodo, ResponseGenerator } from \"../../types/country\";\r\n\r\nconst getCountry = () =>\r\n  axios.get<CTodo[]>(\"https://restcountries.com/v3.1/all\");\r\n\r\nfunction* fetchCountrySaga() {\r\n  try {\r\n    const response: ResponseGenerator = yield call(getCountry);\r\n    yield put(\r\n      getAllCountryListSuccess({\r\n        country: response.data,\r\n      })\r\n    );\r\n  } catch (e: any) {\r\n    yield put(\r\n      getAllCountryListError({\r\n        error: e.message,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction* countrySaga() {\r\n  yield all([\r\n    takeLatest(actions.GET_ALL_COUNTRY_LIST_REQUEST, fetchCountrySaga),\r\n  ]);\r\n}\r\n\r\nexport default countrySaga;\r\n"],"mappings":"4LAaUA,gB,mDAiBAC,W,EA9BV,MAAOC,MAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,GAApB,CAAyBC,UAAzB,KAA2C,oBAA3C,CAEA,OACEC,wBADF,CAEEC,sBAFF,KAGO,0BAHP,CAIA,MAAO,GAAKC,QAAZ,KAAyB,aAAzB,CAGA,GAAMC,WAAU,CAAG,QAAbA,WAAa,SACjBR,MAAK,CAACS,GAAN,CAAmB,oCAAnB,CADiB,EAAnB,CAGA,QAAUX,iBAAV,2KAEwC,MAAMI,KAAI,CAACM,UAAD,CAAV,CAFxC,OAEUE,QAFV,+BAGI,MAAMP,IAAG,CACPE,wBAAwB,CAAC,CACvBM,OAAO,CAAED,QAAQ,CAACE,IADK,CAAD,CADjB,CAAT,CAHJ,uGASI,MAAMT,IAAG,CACPG,sBAAsB,CAAC,CACrBO,KAAK,CAAE,YAAEC,OADY,CAAD,CADf,CAAT,CATJ,oEAiBA,QAAUf,YAAV,6IACE,MAAME,IAAG,CAAC,CACRG,UAAU,CAACG,OAAO,CAACQ,4BAAT,CAAuCjB,gBAAvC,CADF,CAAD,CAAT,CADF,wDAMA,cAAeC,YAAf"},"metadata":{},"sourceType":"module"}