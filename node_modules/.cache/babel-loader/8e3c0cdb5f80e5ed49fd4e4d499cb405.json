{"ast":null,"code":"import * as actions from \"../constant\";\nconst initialState = {\n  isLoading: false,\n  countryDetails: [],\n  isError: false,\n  messgae: \"\"\n};\n\nconst CountryDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type, \"typeeeeeeeeeeeee\");\n\n  switch (action.type) {\n    case actions.GET_ALL_COUNTRY_LIST_REQUEST:\n      return { ...state,\n        isLoading: true,\n        isError: false,\n        messgae: \"\"\n      };\n\n    case actions.GET_ALL_COUNTRY_LIST_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        countryDetails: action.payload,\n        isError: false,\n        messgae: \"\"\n      };\n\n    case actions.GET_ALL_COUNTRY_LIST_ERROR:\n      return { ...state,\n        isLoading: false,\n        Message: action.payload,\n        isError: true,\n        messgae: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CountryDetailsReducer;\nexport default CountryDetailsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetailsReducer\");","map":{"version":3,"names":["actions","initialState","isLoading","countryDetails","isError","messgae","CountryDetailsReducer","state","action","console","log","type","GET_ALL_COUNTRY_LIST_REQUEST","GET_ALL_COUNTRY_LIST_SUCCESS","payload","GET_ALL_COUNTRY_LIST_ERROR","Message"],"sources":["C:/Users/vridhi/Documents/rest-countries/src/redux/reducers/CountryDetailsReducer.tsx"],"sourcesContent":["import * as actions from \"../constant\";\r\nimport { CountryState, CountStateActions } from \"../../types/country\";\r\nconst initialState = {\r\n  isLoading: false,\r\n  countryDetails: [],\r\n  isError: false,\r\n  messgae: \"\",\r\n};\r\n\r\nconst CountryDetailsReducer = (\r\n  state = initialState,\r\n  action: CountStateActions\r\n) => {\r\n  console.log(action.type, \"typeeeeeeeeeeeee\");\r\n  switch (action.type) {\r\n    case actions.GET_ALL_COUNTRY_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n        messgae: \"\",\r\n      };\r\n\r\n    case actions.GET_ALL_COUNTRY_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        countryDetails: action.payload,\r\n        isError: false,\r\n        messgae: \"\",\r\n      };\r\n\r\n    case actions.GET_ALL_COUNTRY_LIST_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        Message: action.payload,\r\n        isError: true,\r\n        messgae: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CountryDetailsReducer;\r\n"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;AAEA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KADQ;EAEnBC,cAAc,EAAE,EAFG;EAGnBC,OAAO,EAAE,KAHU;EAInBC,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,qBAAqB,GAAG,YAGzB;EAAA,IAFHC,KAEG,uEAFKN,YAEL;EAAA,IADHO,MACG;EACHC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAAyB,kBAAzB;;EACA,QAAQH,MAAM,CAACG,IAAf;IACE,KAAKX,OAAO,CAACY,4BAAb;MACE,OAAO,EACL,GAAGL,KADE;QAELL,SAAS,EAAE,IAFN;QAGLE,OAAO,EAAE,KAHJ;QAILC,OAAO,EAAE;MAJJ,CAAP;;IAOF,KAAKL,OAAO,CAACa,4BAAb;MACE,OAAO,EACL,GAAGN,KADE;QAELL,SAAS,EAAE,KAFN;QAGLC,cAAc,EAAEK,MAAM,CAACM,OAHlB;QAILV,OAAO,EAAE,KAJJ;QAKLC,OAAO,EAAE;MALJ,CAAP;;IAQF,KAAKL,OAAO,CAACe,0BAAb;MACE,OAAO,EACL,GAAGR,KADE;QAELL,SAAS,EAAE,KAFN;QAGLc,OAAO,EAAER,MAAM,CAACM,OAHX;QAILV,OAAO,EAAE,IAJJ;QAKLC,OAAO,EAAEG,MAAM,CAACM;MALX,CAAP;;IAQF;MACE,OAAOP,KAAP;EA5BJ;AA8BD,CAnCD;;KAAMD,qB;AAqCN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}